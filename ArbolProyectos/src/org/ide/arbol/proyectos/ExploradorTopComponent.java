package org.ide.arbol.proyectos;

import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.ide.code.editor.EditorTopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.nodes.Node;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@TopComponent.Description(
        preferredID = "ExploradorTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.ide.arbol.proyectos.ExploradorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ExploradorAction",
        preferredID = "ExploradorTopComponent"
)
@Messages({
    "CTL_ExploradorAction=Explorador",
    "CTL_ExploradorTopComponent=Explorador Window",
    "HINT_ExploradorTopComponent=This is a Explorador window"
})
public class ExploradorTopComponent extends TopComponent implements ExplorerManager.Provider {

    private final ExplorerManager mgr = new ExplorerManager();

    public ExploradorTopComponent() {
        initComponents();
        associateLookup(ExplorerUtils.createLookup(mgr, getActionMap()));
      
        // ðŸ”¥ Detectar selecciÃ³n en el Ã¡rbol y abrir el archivo en el editor
        mgr.addPropertyChangeListener((PropertyChangeEvent evt) -> {
            if (ExplorerManager.PROP_SELECTED_NODES.equals(evt.getPropertyName())) {
                Node[] selectedNodes = mgr.getSelectedNodes();
                if (selectedNodes.length == 1) {
                    Node selectedNode = selectedNodes[0];
                    FileObject fileObject = selectedNode.getLookup().lookup(FileObject.class);
                    
                    // Verificar si el nodo seleccionado es un archivo
                    if (fileObject != null && !fileObject.isFolder()) {
                        treeView.getViewport().getView().addMouseListener(new MouseAdapter() {
                            @Override
                            public void mouseClicked(MouseEvent e) {
                                if (e.getClickCount() == 2) { // Detecta doble clic
                                    openFileInEditor(fileObject);
                                }
                            }
                        });
                        
                    }
                }
            }
        });
        
        // Carga los archivos despuÃ©s de que el constructor haya terminado
        SwingUtilities.invokeLater(() -> {
            FileObject rootFolder = FileUtil.toFileObject(new File("C:\\Users\\anton\\Desktop\\Workspace"));
            Node rootNode = new FileNode(rootFolder);
            mgr.setRootContext(rootNode);
        });

    
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        RouteChange = new javax.swing.JButton();
        treeView = new org.openide.explorer.view.BeanTreeView();

        org.openide.awt.Mnemonics.setLocalizedText(RouteChange, org.openide.util.NbBundle.getMessage(ExploradorTopComponent.class, "ExploradorTopComponent.RouteChange.text")); // NOI18N
        RouteChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RouteChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RouteChange)
                .addContainerGap(106, Short.MAX_VALUE))
            .addComponent(treeView, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(treeView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RouteChange)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void RouteChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RouteChangeActionPerformed
        final JFrame parent = new JFrame();
        String name = JOptionPane.showInputDialog(parent,
                        "Nombre del nuevo directorio?", null);
        System.out.println(name);
    }//GEN-LAST:event_RouteChangeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RouteChange;
    private javax.swing.JPanel jPanel1;
    private org.openide.explorer.view.BeanTreeView treeView;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return mgr;
    }
    
    private void openFileInEditor(FileObject fileObject) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                EditorTopComponent editor = new EditorTopComponent();
                editor.open();
                editor.requestActive();
                try {
                
                   editor.loadFile(fileObject);
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        });
    }
    
}
